<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="stm4100DAO">
	<typeAlias alias="egovMap" 		type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="stm4100VO"	type="kr.opensoftlab.oslops.stm.stm4000.stm4100.vo.Stm4100VO"/>
	
	<sql id="stm4100DAO.selectAdm1300UsrList">
		<![CDATA[ 
		SELECT		T.USR_ID
				,	T.USR_NM
				,	T.EMAIL
				,	T.TELNO
				,	T.DEPT_ID
				,	COALESCE((SELECT DEPT_NAME FROM ADM7000 WHERE LIC_GRP_ID = #licGrpId# AND DEPT_ID = T.DEPT_ID), ' ') AS DEPT_NAME
				,	COALESCE(SF_REPLACE_ALL(T.ETC ,'</br>|<br>|<br/>|</BR>|<BR>|<BR/>' , ' '), ' ') AS ETC	
				,	ROWNUM RN
		FROM
		(
			SELECT		A.USR_ID
              		,	B.USR_NM
              		,	B.EMAIL
              		,	B.TELNO
              		,	B.DEPT_ID
              		,	B.ETC
			FROM	ADM1300 A
			INNER JOIN ADM2000 B
			ON ( A.USR_ID = B.USR_ID )
			WHERE	1=1
			AND		A.PRJ_ID = #prjId#
			AND		A.AUTH_GRP_ID = #authGrpId#
		) T 
		WHERE 1 = 1	
 		]]> 
 		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="usrId" prepend="AND">
				T.USR_ID LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="usrNm" prepend="AND">
				T.USR_NM LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="telno" prepend="AND">
				T.TELNO LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="email" prepend="AND">
				T.EMAIL LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="etc" prepend="AND">
				T.ETC LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="deptName" prepend="AND">
				EXISTS (
							SELECT	T.USR_ID
			                FROM 	ADM7000 C 
			                WHERE	1=1
			                AND 	T.DEPT_ID = C.DEPT_ID
			                AND 	C.LIC_GRP_ID = #licGrpId#
			                AND 	C.DEPT_NAME LIKE '%'||#searchTxt#||'%'
						)
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY T.USR_ID
	</sql>
	
	<sql id="stm4100DAO.selectAdm2000UsrList">
		<![CDATA[ 
		SELECT T.*, ROWNUM RN
		FROM
		(
			SELECT		USR_ID
				    ,	LIC_GRP_ID
				    ,	USR_NM
				    ,	COALESCE(EMAIL, '') AS EMAIL
				    ,	COALESCE(TELNO, '') AS TELNO
				    ,	A.DEPT_ID
				    ,	COALESCE((SELECT DEPT_NAME FROM ADM7000 WHERE LIC_GRP_ID = #licGrpId# AND DEPT_ID = A.DEPT_ID), ' ') AS DEPT_NAME
				    ,	COALESCE(SF_REPLACE_ALL(ETC ,'</br>|<br>|<br/>|</BR>|<BR>|<BR/>' , ' '), '') AS ETC    
			FROM	ADM2000 A
			WHERE	1=1
			AND		A.LIC_GRP_ID = #licGrpId#
			AND		A.USE_CD = '01'
			AND		NOT EXISTS (
								SELECT	B.USR_ID
			                    FROM	ADM1300 B 
			                    WHERE	1=1
			                    AND		A.USR_ID = B.USR_ID
			                    AND		B.PRJ_ID = #prjId#
			                    AND		B.AUTH_GRP_ID = #authGrpId#
							)
		) T 
		WHERE 1 = 1						
 		]]> 
 		<isNotEmpty property="searchSelect">
			<isNotEmpty property="searchTxt">
			<isEqual property="searchSelect" compareValue="usrId" prepend="AND">
				T.USR_ID LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="usrNm" prepend="AND">
				T.USR_NM LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="telno" prepend="AND">
				T.TELNO LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="email" prepend="AND">
				T.EMAIL LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="etc" prepend="AND">
				T.ETC LIKE '%'||#searchTxt#||'%'
			</isEqual>
			<isEqual property="searchSelect" compareValue="deptName" prepend="AND">
				EXISTS (
							SELECT	T.USR_ID
			                FROM 	ADM7000 C 
			                WHERE	1=1
			                AND 	T.DEPT_ID = C.DEPT_ID
			                AND 	C.LIC_GRP_ID = #licGrpId#
			                AND 	C.DEPT_NAME LIKE '%'||#searchTxt#||'%'
						)
			</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY T.USR_ID
	</sql>
	
	
	<select id="stm4100DAO.selectPrj1000PrjAuthList" parameterClass="java.util.Map" resultClass="egovMap">
		<![CDATA[ 		
			SELECT 
					T1.* 
			FROM
			(
			  	SELECT 'PRJ' AS TYPE, Z.*
			    FROM
			    (
				      SELECT  
							    A.PRJ_ID AS MENU_ID			
							,	A.PRJ_GRP_ID AS GRP_ID		
							,	(CASE WHEN A.PRJ_GRP_CD = '01' THEN CONCAT('[그룹] ', A.PRJ_NM) ELSE A.PRJ_NM END)  AS MENU_NM	
							,	A.ORD						
		                  	,	A.PRJ_GRP_CD AS MENU_TYPE 	
							,	A.PRJ_TYPE	AS MENU_CODE	   
				      FROM 	PRJ1000 A
				      WHERE 	1=1
				      AND 	A.LIC_GRP_ID =  #licGrpId#
				      AND 	A.USE_CD = '01'	
			    ) Z
			    START WITH Z.GRP_ID IS NULL 
				CONNECT BY PRIOR Z.MENU_ID = Z.GRP_ID 
				ORDER SIBLINGS BY Z.ORD, Z.MENU_NM
			) T1
			UNION ALL
			SELECT 
					T2.* 
			FROM
			(
				SELECT
							'AUTH' AS TYPE
						,	B.AUTH_GRP_ID AS MENU_ID
						,	B.PRJ_ID AS GRP_ID
						,	B.AUTH_GRP_NM AS MENU_NM
						,	B.ORD
						,	B.USR_TYP AS MENU_TYPE
						,	B.ACCEPT_USE_CD AS MENU_CODE
				FROM	ADM1100 B
				INNER JOIN PRJ1000 C
				ON ( B.PRJ_ID = C.PRJ_ID )
				WHERE	1=1
				AND		B.LIC_GRP_ID = #licGrpId#
				AND B.USE_CD = '01' 
			    AND C.USE_CD = '01' 
		        ORDER BY B.ORD
		    ) T2
		]]>	      
	</select>
	
	
	<select id="stm4100DAO.selectAdm1300UsrAddList" parameterClass="stm4100VO" resultClass="egovMap">
		SELECT *
		FROM
		(
			<include refid="stm4100DAO.selectAdm1300UsrList"/>
	    ) T1
	    WHERE 1=1 
	    AND 	T1.RN BETWEEN (#firstIndex#+1) AND #lastIndex#
	</select>

	
	<select id="stm4100DAO.selectAdm1300UsrAddListCnt" parameterClass="stm4100VO" resultClass="java.lang.Integer">
		 SELECT
			COUNT(*)
		FROM	(
			<include refid="stm4100DAO.selectAdm1300UsrList"/>
		) T1
	</select>	
		
		
	<select id="stm4100DAO.selectAdm2000UsrAllList" parameterClass="stm4100VO" resultClass="egovMap">
		SELECT *
		FROM
		(
			<include refid="stm4100DAO.selectAdm2000UsrList"/>
	    ) T1
	    WHERE 1=1 
	    AND 	T1.RN BETWEEN (#firstIndex#+1) AND #lastIndex#
	</select>	
	
	
    <select id="stm4100DAO.selectAdm2000UsrAllListCnt" parameterClass="stm4100VO"  resultClass="java.lang.Integer">
	    SELECT
			COUNT(*)
		FROM	(
			<include refid="stm4100DAO.selectAdm2000UsrList"/>
		) T1
    </select>
    

	<insert id="stm4100DAO.insertAdm1300PrjUsrAuthList" parameterClass="java.util.Map">
	<![CDATA[
		INSERT INTO ADM1300
		(
			PRJ_ID,			AUTH_GRP_ID,	USR_ID,			REG_DTM,		REG_USR_ID,
		    REG_USR_IP,		MODIFY_DTM,		MODIFY_USR_ID,	MODIFY_USR_IP
		)
		VALUES
		(
			#prjId#,		#authGrpId#,	#usrId#,		CURRENT_TIMESTAMP,		#regUsrId#,			
			#regUsrIp#,		CURRENT_TIMESTAMP,		#regUsrId#,		#regUsrIp#

		)
	]]>
	</insert>
	
	
	<delete id="stm4100DAO.deleteAdm1300PrjUsrAuthList" parameterClass="java.util.Map">
	<![CDATA[
		DELETE	
		FROM	ADM1300
		WHERE	1=1
        AND		PRJ_ID = #prjId#
        AND		AUTH_GRP_ID = #authGrpId#
		AND		USR_ID = #usrId#
	]]>
	</delete>
	
	
	<select id="stm4100DAO.selectAdm1300UsrCntCheck" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		<![CDATA[ 
			SELECT	COUNT(*) AS CNT
			FROM	ADM1300 A
			WHERE	1=1
			AND		A.PRJ_ID = #prjId#
 		]]> 
	</select>

	
</sqlMap>
